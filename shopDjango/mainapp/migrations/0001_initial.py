# Generated by Django 4.0.1 on 2022-07-16 18:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mainapp.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[django.core.validators.EmailValidator(allowlist=['localhost', 'ynd', 'yandex', 'rambler', 'gmail', 'mail'], message='Please enter a valid email address with the following domains: yandex, rambler, gmail, mail')], verbose_name='email address')),
                ('birth_day', models.DateField(db_index=True, max_length=255, null=True, verbose_name='Birth day')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', mainapp.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccumulativeDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.FloatField(db_index=True, verbose_name='Discount')),
            ],
            options={
                'verbose_name': 'Accumulative discount',
                'verbose_name_plural': 'Accumulative discounts',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house', models.CharField(blank=True, max_length=255, verbose_name='House')),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='Street')),
                ('city', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='City')),
                ('region', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Region')),
                ('country', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Country')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'", regex='^(\\+\\d{1,3})?,?\\s?\\d{8,13}')], verbose_name='Phone')),
                ('static_avatar', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Avatar')),
                ('second_name', models.CharField(blank=True, max_length=255, verbose_name='Second name')),
                ('corgi_coin', models.PositiveIntegerField(default=0, verbose_name='Corgi coin')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.DecimalValidator(decimal_places=2, max_digits=11)], verbose_name='Balance')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'permissions': (('Can_add_money', 'Top add balance'),),
            },
        ),
    ]
